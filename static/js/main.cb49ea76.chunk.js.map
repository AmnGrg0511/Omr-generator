{"version":3,"sources":["components/Options.jsx","App.js","index.js"],"names":["Options","question","i","setQuestions","style","display","margin","boxShadow","alignItems","justifyContent","backgroundColor","textAlign","width","height","fontSize","color","fontWeight","borderRight","padding","map","value","onClick","prev","e","j","className","App","useState","number","setNumber","time","setTime","remainingTime","setRemainingTime","questions","console","log","type","placeholder","onChange","target","parseInt","split","hours","minutes","Array","fill","setInterval","position","top","filter","length","flexWrap","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb49ea76.chunk.js","sourcesContent":["export const Options = ({ question, i, setQuestions }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        margin: 10,\n        boxShadow: \"rgba(0, 0, 0, 0.05) 0px 0px 0px 1px\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"#f9f9f9\",\n          textAlign: \"center\",\n          width: 25,\n          height: \"100%\",\n          margin: \"auto\",\n          fontSize: 10,\n          color: \"#999\",\n          fontWeight: \"bold\",\n          borderRight: \"1px solid #eee\",\n        }}\n      >\n        {i + 1}\n      </div>\n      <div style={{padding: \"0 5px\"}}>\n        {[\"a\", \"b\", \"c\", \"d\"].map((value) => (\n          <button\n            key={value}\n            onClick={() => {\n\t\t\t\tsetQuestions(prev => prev.map((e,j)=>i===j?(e===value?\"\":value):e))\n\t\t\t}}\n            className={(value === question ? \"active \" : \"\") + \"btn\"}\n          >\n            {value}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport { Options } from \"./components/Options\";\n\nfunction App() {\n  const [number, setNumber] = useState(0);\n  const [time, setTime] = useState(0);\n  const [remainingTime, setRemainingTime] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  console.log({ questions });\n\n  return (\n    <div className=\"App\">\n      {remainingTime === 0 && (\n        <>\n          <input\n            type=\"number\"\n            placeholder=\"Enter number of questions\"\n            style={{ padding: 10, margin: 10, height: 20 }}\n            onChange={({ target: { value } }) => {\n              if (value) setNumber(parseInt(value));\n            }}\n          />\n          <input\n            type=\"time\"\n            placeholder=\"Time\"\n            style={{ padding: 10, margin: 10, height: 20 }}\n            onChange={({ target: { value } }) => {\n              if (value) {\n                const [hours, minutes] = value\n                  .split(\":\")\n                  .map((e) => parseInt(e));\n                setTime(60 * (60 * hours + minutes));\n              }\n            }}\n          />\n          <button\n            style={{\n              padding: 10,\n              margin: 10,\n              height: 44,\n              display: \"inline-block\",\n              width: 100,\n            }}\n            className=\"btn\"\n            onClick={() => {\n              if (number && time) {\n                setQuestions(new Array(number).fill(\"\"));\n                setInterval(\n                  () => setRemainingTime((prev) => (prev ? prev - 1 : time)),\n                  1000\n                );\n              }\n            }}\n          >\n            Start\n          </button>\n        </>\n      )}\n      {remainingTime !== 0 && (\n        <div\n          style={{\n            position: \"sticky\",\n            top: 0,\n            padding: \"20px 0\",\n            width: \"100%\",\n            backgroundColor: \"#fafbfc\",\n          }}\n        >\n          <div\n            style={{\n              width: \"60%\",\n              margin: \"0 auto 20px\",\n              backgroundColor: \"#fff\",\n            }}\n          >\n            <div\n              style={{\n                backgroundColor: \"#39b9df\",\n                height: 5,\n                width: `${\n                  (questions.filter((e) => e !== \"\").length / number) * 100\n                }%`,\n              }}\n            ></div>\n          </div>\n          <div\n            style={{\n              width: \"80%\",\n              margin: \"auto\",\n              backgroundColor: \"#fff\",\n            }}\n          >\n            <div\n              style={{\n                backgroundColor: \"#39df92\",\n                height: 5,\n                width: `${(remainingTime / time) * 100}%`,\n              }}\n            ></div>\n          </div>\n        </div>\n      )}\n      <div\n        style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\n      >\n        {questions.map((question, i) => (\n          <Options\n            key={i}\n            question={question}\n            setQuestions={setQuestions}\n            i={i}\n          />\n        ))}\n      </div>\n\n      {remainingTime !== 0 && (\n        <button\n          style={{\n            padding: 10,\n            margin: 10,\n            height: 44,\n            display: \"inline-block\",\n            width: 100,\n          }}\n          className=\"btn\"\n          onClick={() => {\n            if (number && time) {\n              setQuestions(new Array(number).fill(\"\"));\n              setInterval(\n                () => setRemainingTime((prev) => (prev ? prev - 1 : time)),\n                1000\n              );\n            }\n          }}\n        >\n          Submit\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}